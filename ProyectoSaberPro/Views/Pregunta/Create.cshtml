@model ProyectoSaberPro.Models.Pregunta

@{
    ViewBag.Title = "Crear Pregunta";
    //Layout = "~/Views/Shared/_LayoutDocente.cshtml";
    Layout = "~/Views/Shared/LayoutDocente/_headerDocente.cshtml";

}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pregunta</h4>
        <hr />

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Descripcion", null, new { cols = 22, rows = 2, @class = "form-control", id = "descripcion" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdCompetencia, "Competencia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCompetencia, null, htmlAttributes: new { @class = "form-control", @id = "idcombo" })
                @Html.ValidationMessageFor(model => model.IdCompetencia, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model, "Enunciado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" required name="Enunciado" id="enunciado" placeholder="Escriba el título del enunciado">
                @Html.ValidationMessageFor(model => model.IdEnunciado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model, "Prueba", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" required name="Prueba" id="prueba" placeholder="Escriba el nombre de la prueba">

            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/autosize.min.js"></script>

    <script>

     /* $(document).ready(function () {
        $("#enunciado").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: 'Url.Action("BuscarEnunciado","Home")',
                    type: "POST",
                    data: { term: $("#enunciado").val(), competencia: $("#idcombo option:selected").text() },
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#searchName").html(''),
                        response($.map(data, function (item) {
                            return {
                                label: item
                            }
                        }));
                    }
                });
            },
        })
    });*/


        $(function () {
            $("#enunciado").autocomplete({
                source: '@Url.Action("BuscarEnunciado","Home")',


            });
        });

         $(function () {
            $("#prueba").autocomplete({
                source: '@Url.Action("BuscarPrueba","Home")',

            });
        });
    </script>
    <script>
        autosize(document.querySelectorAll('#descripcion'));

    </script>

    <!--<script type="text/javascript">
        $(document).ready(function () {
            $('#idcombo').change(function () {
                $('#enunciado').val($('#idcombo option:selected').text());

            });
        });
    </script>-->
    <!--<script type="text/javascript">
        $(document).ready(
            function () {
                $("#idcombo").click(
                    function () {
                        actualizarTablaProductos();
                    }
                );
            }
        );
         function actualizarTablaProductos() {
            var IdCompetencia = $("#idcombo option:selected").text();
             enviarSolicitudProducto(IdCompetencia);
        }
        function enviarSolicitudProducto(IdCompetencia) {
            var urlEnviar;

                urlEnviar = 'Url.Action("BuscarEnunciadoCompetencia", "Home")';

                //urlEnviar = 'Url.Action("EliminarProducto", "PedidoCP")';

            /*var producto = {
                id: idProducto,
                descripcion: nombreProducto,
                valorUnitario: valorProducto,
                cantidad: cantidadProducto,
                token: $("#Token").val()
            }*/
            $.ajax(
                {
                    url: urlEnviar,
                    type: "POST",
                    data: {"combo"},
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    async: true,
                    success:
                        function (response) {
                            console.log(response);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var error = eval("(" + XMLHttpRequest.responseText + ")");
                        console.log(error.Message);
                    }
                }
            );
        }
    </script>-->
}


<!--< script >
            GENERA UNA LISTA CON EL LABEL Y EL VALOR DEL LABEL
        $(document).on('focus', '#idLocalNamesExample2', function () {
            var list = [
                { value: '1', label: 'Test' },
                { value: '1', label: 'Test 1' },
                { value: '2', label: 'Test 2' }
            ];
            $(this).autocomplete({
                //source take a list of data
                source: list,
                minLength: 1//min = 2 characters
            });
        });
        $(document).on('focus', '#idExternalNamesExample2', function () {
            $(this).autocomplete({
                //source have a url of a service
                source: '////Url.Action("AutoCompleteExternalDataExample2")',
                minLength: 1//min = 2 characters
            });
        });
    </script>-->
